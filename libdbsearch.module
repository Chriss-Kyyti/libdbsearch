<?php
/**
 * @file
 * Module to make search to library database
 * and showing the result in Drupal page.
 *
 * Last modified: 04.03.2013 Mika Hatakka
 */

/**
 * Implements hook_help().
 */
function libdbsearch_help($path, $arg) {
  if ($path == 'admin/help#libdbsearch') {
    return check_markup(file_get_contents(dirname(__FILE__) . "/README.txt"));
  }
}

/**
 * Implemtents hook_menu().
 */
function libdbsearch_menu() {
  $items = array();
  $items['admin/config/search/libdbsearch'] = array(
    'title' => 'Library database',
    'description' => 'Description',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('libdbsearch_admin'),
    'access arguments' => array('administer library search'),
    'file' => 'libdbsearch.admin.inc',
  );
  $items['admin/config/search/libdbsearch/general'] = array(
    'title' => 'General settings',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['libdbsearch'] = array(
    'title' => 'Library database search',
    'page callback' => 'libdbsearch_view',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK
  );
  return $items;
}

/**
 * Implementation of hook_perm().
 */
function libdbsearch_permission() {
  return array(
    'administer library search' => array(
      'title' => t('Administer library database search'),
    ),
  );
}


function libdbsearch_view($action = 'haku', $keys = '') {
//  dpm($cond, 'cond');
//  dpm($action, 'action');
//  dpm($_GET, 'GET');
  
  $origo = new LibdbConnection();
  $origo->init($action, $keys);
  $result = $origo->getPage();
  
  if(empty($result)) {
    $output = 'Internal Function Error.';
  }
  else {
    $output = 'Got something';
    $output .= $result;
  }
  
  


  return $output;
}
